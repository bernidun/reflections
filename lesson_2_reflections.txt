What happens when you initialize a repository? Why do you need to do it?

A folder is set up that contains the information about commits and files. No commits are made because you have to save the commits to create them.



How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area keeps track of which files you want to track changes to. The working directory is where the files are located, and the repository keeps a history of changes made to the files.
Repository has the commits.
Staging area - copy of most recent commit.
Working directory - has the files that are being used for the current checkout

git diff id1 id2 - compares two commits using their commit ids
git diff - compares working directory to staging area
git diff --staged - compares staging area to most recent commit



How can you use the staging area to make sure you have one commit per logical change?

By using git diff with the staging area you can see what files have been changed. If a file has a change that doesn't reflect the logical change, it doesn't need to be included in the commit.



What are some situations when branches would be helpful in keeping your history organized? How would branches help?

If I want to try something that I'm not sure about and I want to make sure I keep the code I have, I can create a branch for the experimental code. This would give me a history for that experiment that wouldn't mess up the original code.

That way, if I decide not to keep the new experimental code, I can go back to the code I had that was good.

Branches can keep the code for multiple variations separate and keep from having to figure out which version was the one I need to go back to for the original code.



How do the diagrams help you visualize the branch structure?

They make it easier to see what changes to a file affect which parent file. I can also see where branches began, so I can tell which master file would have the code that the last file in the branch relates to.
